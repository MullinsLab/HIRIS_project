# Generated by Django 4.1.5 on 2023-03-03 17:59

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('added_date', models.DateField(auto_now_add=True)),
                ('updated_date', models.DateField(auto_now=True)),
                ('feature_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('feature_name', models.CharField(max_length=255)),
                ('external_gene_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'features',
            },
        ),
        migrations.CreateModel(
            name='FeatureType',
            fields=[
                ('added_date', models.DateField(auto_now_add=True)),
                ('updated_date', models.DateField(auto_now=True)),
                ('feature_type_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('feature_type_name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'db_table': 'feature_types',
            },
        ),
        migrations.CreateModel(
            name='GeneType',
            fields=[
                ('added_date', models.DateField(auto_now_add=True)),
                ('updated_date', models.DateField(auto_now=True)),
                ('gene_type_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('gene_type_name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'db_table': 'gene_types',
            },
        ),
        migrations.CreateModel(
            name='GenomeSpecies',
            fields=[
                ('added_date', models.DateField(auto_now_add=True)),
                ('updated_date', models.DateField(auto_now=True)),
                ('genome_species_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('genome_species_name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'db_table': 'genome_species',
            },
        ),
        migrations.CreateModel(
            name='GenomeVersion',
            fields=[
                ('added_date', models.DateField(auto_now_add=True)),
                ('updated_date', models.DateField(auto_now=True)),
                ('genome_version_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('genome_version_name', models.CharField(max_length=255, unique=True)),
                ('external_gene_id_source', models.CharField(blank=True, max_length=255, null=True)),
                ('genome_species', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.genomespecies')),
            ],
            options={
                'db_table': 'genome_versions',
            },
        ),
        migrations.CreateModel(
            name='FeatureLocation',
            fields=[
                ('added_date', models.DateField(auto_now_add=True)),
                ('updated_date', models.DateField(auto_now=True)),
                ('feature_location_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('chromosome', models.CharField(max_length=255, null=True)),
                ('landmark', models.CharField(max_length=255, null=True)),
                ('feature_start', models.IntegerField()),
                ('feature_end', models.IntegerField()),
                ('feature_orientation', models.CharField(choices=[('F', 'Forward'), ('R', 'Reverse')], max_length=1)),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.feature')),
            ],
            options={
                'db_table': 'feature_locations',
            },
        ),
        migrations.AddField(
            model_name='feature',
            name='feature_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.featuretype'),
        ),
        migrations.AddField(
            model_name='feature',
            name='gene_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.genetype'),
        ),
        migrations.AddField(
            model_name='feature',
            name='genome_version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.genomeversion'),
        ),
        migrations.AddIndex(
            model_name='featurelocation',
            index=models.Index(fields=['feature', 'landmark'], name='feature_loc_feature_d0f489_idx'),
        ),
        migrations.AddIndex(
            model_name='featurelocation',
            index=models.Index(fields=['landmark'], name='feature_loc_landmar_b0db14_idx'),
        ),
        migrations.AddIndex(
            model_name='featurelocation',
            index=models.Index(fields=['feature', 'chromosome'], name='feature_loc_feature_85babf_idx'),
        ),
        migrations.AddIndex(
            model_name='featurelocation',
            index=models.Index(fields=['chromosome'], name='feature_loc_chromos_60c318_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='featurelocation',
            unique_together={('feature', 'landmark')},
        ),
        migrations.AddIndex(
            model_name='feature',
            index=models.Index(fields=['genome_version', 'feature_name'], name='features_genome__4410ce_idx'),
        ),
        migrations.AddIndex(
            model_name='feature',
            index=models.Index(fields=['feature_name'], name='features_feature_7735e6_idx'),
        ),
        migrations.AddIndex(
            model_name='feature',
            index=models.Index(fields=['genome_version'], name='features_genome__b7a95e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='feature',
            unique_together={('genome_version', 'feature_name')},
        ),
    ]
