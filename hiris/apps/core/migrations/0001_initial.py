# Generated by Django 4.1.5 on 2023-02-24 15:38

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Gene',
            fields=[
                ('added_date', models.DateField(auto_now_add=True)),
                ('updated_date', models.DateField(auto_now=True)),
                ('gene_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('gene_name', models.CharField(max_length=255)),
                ('external_gene_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'genes',
            },
        ),
        migrations.CreateModel(
            name='GeneType',
            fields=[
                ('added_date', models.DateField(auto_now_add=True)),
                ('updated_date', models.DateField(auto_now=True)),
                ('gene_type_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('gene_type_name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'db_table': 'gene_types',
            },
        ),
        migrations.CreateModel(
            name='GenomeSpecies',
            fields=[
                ('added_date', models.DateField(auto_now_add=True)),
                ('updated_date', models.DateField(auto_now=True)),
                ('genome_species_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('genome_species_name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'db_table': 'genome_species',
            },
        ),
        migrations.CreateModel(
            name='GenomeVersion',
            fields=[
                ('added_date', models.DateField(auto_now_add=True)),
                ('updated_date', models.DateField(auto_now=True)),
                ('genome_version_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('genome_version_name', models.CharField(max_length=255, unique=True)),
                ('external_gene_id_source', models.CharField(blank=True, max_length=255, null=True)),
                ('genome_species', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.genomespecies')),
            ],
            options={
                'db_table': 'genome_versions',
            },
        ),
        migrations.CreateModel(
            name='GeneLocation',
            fields=[
                ('added_date', models.DateField(auto_now_add=True)),
                ('updated_date', models.DateField(auto_now=True)),
                ('gene_location_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('chromosome', models.CharField(max_length=255, null=True)),
                ('landmark', models.CharField(max_length=255, null=True)),
                ('gene_start', models.IntegerField()),
                ('gene_end', models.IntegerField()),
                ('gene_orientation', models.CharField(choices=[('F', 'Forward'), ('R', 'Reverse')], max_length=1)),
                ('gene', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.gene')),
            ],
            options={
                'db_table': 'gene_locations',
            },
        ),
        migrations.AddField(
            model_name='gene',
            name='gene_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.genetype'),
        ),
        migrations.AddField(
            model_name='gene',
            name='genome_version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.genomeversion'),
        ),
        migrations.AddIndex(
            model_name='genelocation',
            index=models.Index(fields=['gene', 'landmark'], name='gene_locati_gene_id_2b26f1_idx'),
        ),
        migrations.AddIndex(
            model_name='genelocation',
            index=models.Index(fields=['landmark'], name='gene_locati_landmar_b75450_idx'),
        ),
        migrations.AddIndex(
            model_name='genelocation',
            index=models.Index(fields=['gene', 'chromosome'], name='gene_locati_gene_id_7904c5_idx'),
        ),
        migrations.AddIndex(
            model_name='genelocation',
            index=models.Index(fields=['chromosome'], name='gene_locati_chromos_14d9b0_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='genelocation',
            unique_together={('gene', 'landmark')},
        ),
        migrations.AddIndex(
            model_name='gene',
            index=models.Index(fields=['genome_version', 'gene_name'], name='genes_genome__f18e78_idx'),
        ),
        migrations.AddIndex(
            model_name='gene',
            index=models.Index(fields=['gene_name'], name='genes_gene_na_765ad2_idx'),
        ),
        migrations.AddIndex(
            model_name='gene',
            index=models.Index(fields=['genome_version'], name='genes_genome__0cc61c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='gene',
            unique_together={('genome_version', 'gene_name')},
        ),
    ]
